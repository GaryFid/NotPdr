generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  username          String       @unique
  password          String?
  birthDate         DateTime?
  registrationDate  DateTime?    @default(now())
  telegramId        String?      @unique
  googleId          String?      @unique
  yandexId          String?      @unique
  firstName         String?
  lastName          String?
  displayName       String?
  avatar            String?
  rating            Int          @default(1000)
  coins             Int          @default(0)
  level             Int          @default(1)
  experience        Int          @default(0)
  gamesPlayed       Int          @default(0)
  gamesWon          Int          @default(0)
  authType          String       @default("local")
  lastLoginDate     DateTime?
  isActive          Boolean      @default(true)
  school            String?
  referralCode      String?      @unique
  telegram_username String?
  last_active       DateTime?    @default(now())
  friendships       Friendship[] @relation("UserFriends")
  friendOf          Friendship[] @relation("FriendOfUser")
  games             Game[]       @relation("CurrentPlayerUser")
  gamesWonList      Game[]       @relation("WinnerUser")
}

model Friendship {
  id          Int      @id @default(autoincrement())
  userId      Int
  friendId    Int
  status      String   @default("pending")
  requestedAt DateTime @default(now())
  respondedAt DateTime?
  user        User     @relation("UserFriends", fields: [userId], references: [id])
  friend      User     @relation("FriendOfUser", fields: [friendId], references: [id])

  @@unique([userId, friendId])
  @@index([userId])
  @@index([friendId])
}

model Game {
  id              Int      @id @default(autoincrement())
  status          String   @default("waiting")
  players         Json
  deck            Json
  discardPile     Json
  currentPlayer   Int?
  winnerId        Int?
  withAI          Boolean  @default(false)
  aiTestMode      Boolean  @default(false)
  gameStage       String   @default("init")
  currentPlayerId Int?
  startTime       DateTime?
  endTime         DateTime?
  gameData        Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  winner          User?    @relation("WinnerUser", fields: [winnerId], references: [id])
  currentPlayerUser User?  @relation("CurrentPlayerUser", fields: [currentPlayerId], references: [id])
} 