// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã HD –∫–æ—à–µ–ª—å–∫–æ–≤ –≤ Supabase
const { createClient } = require('@supabase/supabase-js');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function createHDWalletsTable() {
  console.log('üîß –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É HD –∫–æ—à–µ–ª—å–∫–æ–≤...');

  const createTableSQL = `
    -- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã HD –∫–æ—à–µ–ª—å–∫–æ–≤
    CREATE TABLE IF NOT EXISTS _pidr_hd_wallets (
        id BIGSERIAL PRIMARY KEY,
        user_id VARCHAR(255) NOT NULL,
        coin VARCHAR(10) NOT NULL,
        address VARCHAR(255) NOT NULL,
        derivation_path VARCHAR(100) NOT NULL,
        address_index INTEGER NOT NULL,
        is_active BOOLEAN DEFAULT true,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    CREATE UNIQUE INDEX IF NOT EXISTS idx_pidr_hd_user_coin 
    ON _pidr_hd_wallets (user_id, coin);

    CREATE UNIQUE INDEX IF NOT EXISTS idx_pidr_hd_coin_index 
    ON _pidr_hd_wallets (coin, address_index);

    CREATE UNIQUE INDEX IF NOT EXISTS idx_pidr_hd_address 
    ON _pidr_hd_wallets (coin, address);

    -- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    CREATE INDEX IF NOT EXISTS idx_pidr_hd_user_id 
    ON _pidr_hd_wallets (user_id);

    CREATE INDEX IF NOT EXISTS idx_pidr_hd_coin 
    ON _pidr_hd_wallets (coin);

    CREATE INDEX IF NOT EXISTS idx_pidr_hd_created_at 
    ON _pidr_hd_wallets (created_at DESC);
  `;

  try {
    const { data, error } = await supabase.rpc('exec_sql', { 
      sql_query: createTableSQL 
    });

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:', error);
      
      // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —á–µ—Ä–µ–∑ REST API
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ REST API...');
      
      const { data: testData, error: testError } = await supabase
        .from('_pidr_hd_wallets')
        .select('*')
        .limit(1);

      if (testError && testError.code === '42P01') {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞');
        console.log('üìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç SQL –≤ Supabase Dashboard:');
        console.log(createTableSQL);
      } else if (testError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:', testError);
      } else {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ _pidr_hd_wallets —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ HD –∫–æ—à–µ–ª—å–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
    const { data: testInsert, error: insertError } = await supabase
      .from('_pidr_hd_wallets')
      .insert([{
        user_id: 'test_user_123',
        coin: 'TON',
        address: 'UQDtest_address_123',
        derivation_path: "m/44'/607'/0'/0/0",
        address_index: 0
      }])
      .select();

    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:', insertError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:', testInsert);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase
        .from('_pidr_hd_wallets')
        .delete()
        .eq('user_id', 'test_user_123');
      
      console.log('üßπ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
createHDWalletsTable();
